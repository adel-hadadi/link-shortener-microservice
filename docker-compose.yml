services:
  api-gateway:
    build:
      context: ./internal/gateway
      dockerfile: app.Dockerfile
    ports:
      - "80:80"
    networks:
      - link-shortener

  link-grpc:
    build:
      context: ./internal/link
      dockerfile: app.Dockerfile
    ports:
      - "8081:80"
    environment:
      SERVER_TO_RUN: grpc
    networks:
      - link-shortener

  report-grpc:
    build:
      context: ./internal/report
      dockerfile: app.Dockerfile
    volumes:
      - ./internal/report/storage:/app/storage/
    ports:
      - "8082:80"
    networks:
      - link-shortener

  postgres:
    image: "postgres:15.4"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres
      TZ: Asia/Tehran
    volumes:
      - postgresql:/data/postgres
      - ./docker/database:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - link-shortener

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: report
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db
    networks:
      - link-shortener

  minio:
    image: "minio/minio:latest"
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./minio/data:/data
    networks:
      - link-shortener

volumes:
  postgresql:

networks:
  link-shortener:
    driver: bridge